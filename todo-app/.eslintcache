[{"/Users/Mike/Desktop/ToDo-React-App/todo-app/src/App.js":"1","/Users/Mike/Desktop/ToDo-React-App/todo-app/src/index.js":"2","/Users/Mike/Desktop/ToDo-React-App/todo-app/src/components/AddToDo.js":"3","/Users/Mike/Desktop/ToDo-React-App/todo-app/src/components/tasks.js":"4","/Users/Mike/Desktop/ToDo-React-App/todo-app/src/components/ToDoList.js":"5","/Users/Mike/Desktop/ToDo-React-App/todo-app/src/components/constants.js":"6","/Users/Mike/Desktop/ToDo-React-App/todo-app/src/components/ToDo.js":"7","/Users/Mike/Desktop/ToDo-React-App/todo-app/src/components/Operation.js":"8"},{"size":884,"mtime":1610024720080,"results":"9","hashOfConfig":"10"},{"size":171,"mtime":1610012601139,"results":"11","hashOfConfig":"10"},{"size":1374,"mtime":1610024448552,"results":"12","hashOfConfig":"10"},{"size":2939,"mtime":1610025374810,"results":"13","hashOfConfig":"10"},{"size":393,"mtime":1610023930322,"results":"14","hashOfConfig":"10"},{"size":123,"mtime":1610027242876,"results":"15","hashOfConfig":"10"},{"size":3093,"mtime":1610024803107,"results":"16","hashOfConfig":"10"},{"size":2280,"mtime":1610024481279,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"20","usedDeprecatedRules":"21"},"1138ja0",{"filePath":"22","messages":"23","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"24","messages":"25","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"28","messages":"29","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30","usedDeprecatedRules":"21"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"33","messages":"34","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"35","messages":"36","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37"},"/Users/Mike/Desktop/ToDo-React-App/todo-app/src/App.js",["38"],"import React, { useEffect, useState } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { getTasks, addTask, delTask, editTask } from \"./components/tasks\";\nimport AddToDo from \"./components/AddToDo\";\nimport ToDoList from \"./components/ToDoList\";\nimport \"./styles/App.scss\";\n\nconst App = () => {\n  const [tasks, setTasks] = useState([]);\n  const [reloading, reloadTasks] = useState(false);\n\n  useEffect(() => {\n    getTasks(setTasks);\n  }, [reloading]);\n\n  return !tasks ? (\n    <h1>loading...</h1>\n  ) : (\n    <div className=\"page-wrapper\">\n      <AddToDo addTask={(body) => addTask(reloadTasks, body)} />\n      <ToDoList\n        tasks={tasks}\n        delTask={(id) => {\n          delTask(reloadTasks, id);\n        }}\n        finishTasl={(task) =>\n          editTask(reloadTasks, task.id, { ...task, status: \"closed\" })\n        }\n      />\n    </div>\n  );\n};\n\nexport default App;\n",["39","40"],"/Users/Mike/Desktop/ToDo-React-App/todo-app/src/index.js",["41","42"],"/Users/Mike/Desktop/ToDo-React-App/todo-app/src/components/AddToDo.js",["43"],"/Users/Mike/Desktop/ToDo-React-App/todo-app/src/components/tasks.js",[],"/Users/Mike/Desktop/ToDo-React-App/todo-app/src/components/ToDoList.js",["44","45"],"import React, { useState, useEffect } from \"react\";\nimport ToDo from \"./ToDo\";\n\nconst ToDoList = ({ tasks, delTask, finishTask }) => {\n  return (\n    <ul className=\"todo-list\">\n      {tasks.map((task) => (\n        <ToDo\n          key={task.id}\n          task={task}\n          delTask={delTask}\n          finishTask={finishTask}\n        />\n      ))}\n    </ul>\n  );\n};\n\nexport default ToDoList;\n","/Users/Mike/Desktop/ToDo-React-App/todo-app/src/components/constants.js",[],"/Users/Mike/Desktop/ToDo-React-App/todo-app/src/components/ToDo.js",["46"],"/Users/Mike/Desktop/ToDo-React-App/todo-app/src/components/Operation.js",["47"],"import React, { useState, useEffect } from \"react\";\n\nconst Operation = ({ operation, delOperation, addTime, status }) => {\n  const [showAddTimeForm, setShowAddTimeForm] = useState(false);\n  const [timeToAdd, setTimeToAdd] = useState(\"\");\n\n  const { id, description, timeSpent } = operation;\n\n  const handleTimeChange = ({ target: { value } }) => {\n    setTimeToAdd(parseInt(value));\n  };\n\n  const addTimeSpent = (e) => {\n    e.preventDefault();\n\n    addTime({ description, timeSpent: timeSpent + timeToAdd }, id);\n    setShowAddTimeForm(false);\n  };\n\n  return (\n    <li className=\"operation\">\n      <div>\n        {description}{\" \"}\n        {timeSpent > 0 && (\n          <span className=\"operation__time\">\n            {~~(timeSpent / 60)}h {~~(timeSpent % 60)}m\n          </span>\n        )}\n      </div>\n      <div>\n        {showAddTimeForm ? (\n          <form onSubmit={addTimeSpent}>\n            <input\n              type=\"text\"\n              className=\"operation__input left\"\n              value={timeToAdd}\n              placeholder=\"Spent time in minutes\"\n              onChange={handleTimeChange}\n            />\n            <button\n              className=\"btn btn--tiny btn--empty-green middle\"\n              type=\"submit\"\n            >\n              <i className=\"fas fa-save\" />\n            </button>\n            <button\n              className=\"btn btn--tiny btn--empty-black right\"\n              onClick={() => {\n                setShowAddTimeForm(false);\n              }}\n            >\n              <i className=\"fas fa-times\" />\n            </button>\n          </form>\n        ) : (\n          <>\n            {status === \"open\" && (\n              <button\n                className=\"btn btn--small btn--empty-green\"\n                onClick={() => {\n                  setShowAddTimeForm(true);\n                }}\n              >\n                Add time <i className=\"fas fa-plus-circle\" />\n              </button>\n            )}\n            <button\n              className=\"btn btn--small btn--empty-red\"\n              onClick={() => {\n                delOperation(id);\n              }}\n            >\n              <i className=\"fa fa-trash\" aria-hidden=\"true\" />\n            </button>\n          </>\n        )}\n      </div>\n    </li>\n  );\n};\n\nexport default Operation;\n",{"ruleId":"48","severity":1,"message":"49","line":2,"column":8,"nodeType":"50","messageId":"51","endLine":2,"endColumn":16},{"ruleId":"52","replacedBy":"53"},{"ruleId":"54","replacedBy":"55"},{"ruleId":"48","severity":1,"message":"56","line":1,"column":17,"nodeType":"50","messageId":"51","endLine":1,"endColumn":26},{"ruleId":"48","severity":1,"message":"57","line":1,"column":28,"nodeType":"50","messageId":"51","endLine":1,"endColumn":36},{"ruleId":"48","severity":1,"message":"56","line":1,"column":27,"nodeType":"50","messageId":"51","endLine":1,"endColumn":36},{"ruleId":"48","severity":1,"message":"57","line":1,"column":17,"nodeType":"50","messageId":"51","endLine":1,"endColumn":25},{"ruleId":"48","severity":1,"message":"56","line":1,"column":27,"nodeType":"50","messageId":"51","endLine":1,"endColumn":36},{"ruleId":"58","severity":1,"message":"59","line":20,"column":6,"nodeType":"60","endLine":20,"endColumn":17,"suggestions":"61"},{"ruleId":"48","severity":1,"message":"56","line":1,"column":27,"nodeType":"50","messageId":"51","endLine":1,"endColumn":36},"no-unused-vars","'ReactDOM' is defined but never used.","Identifier","unusedVar","no-native-reassign",["62"],"no-negated-in-lhs",["63"],"'useEffect' is defined but never used.","'useState' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'id'. Either include it or remove the dependency array.","ArrayExpression",["64"],"no-global-assign","no-unsafe-negation",{"desc":"65","fix":"66"},"Update the dependencies array to be: [id, reloading]",{"range":"67","text":"68"},[573,584],"[id, reloading]"]